# Reconciliationとは
Reactは、新しい仮想DOMと現在のファイバーツリーを比較して、必要なDOM変更を特定します。
このプロセスを「リコンシリエーション」と呼びます。


## なぜReconciliationが必要なのか
アプリのどこかでステートが変更された場合､DOMのごく一部だけを更新し、すでに存在しているDOMの残りは再利用したいから。
アプリのどこかで状態が変化するたびに､ 単純にDOM全体を更新するのは効率が悪い。


## Reconciliationの仕組み
リコンシリエーションはリコンサイラによって処理される。このリコンサイラこそがReactのエンジンだと言える｡
リコンサイラによって、DOMに直接触れることなく、代わりにReactに状態に基づいてUIの次のスナップショットがどうあるべきかを伝えることができる。
Reactの現在のリコンサイラはFiberと呼ばれる。


## Fiberとは
アプリケーションの最初のレンダリング時に、ファイバーはReactの要素ツリー全体、つまり仮想DOMを取得し､ それに基づいてファイバーツリーを構築する｡
ファイバーはツリー全体を段階的にウォークスルーし、現在のファイバー・ツリーと、新しい仮想DOMに基づいて更新されたファイバー・ツリーの間で、何を変更する必要があるかを正確に分析する｡

### ファイバー・ツリーの特徴
・特別な内部ツリーであり、アプリ内の各コンポーネント・インスタンスとDOM要素に対して、ファイバーが1つ存在する｡
・仮想DOMのReact要素とは異なり､ ファイバーはレンダリングごとに再作成されない。
・変更可能データ構造であり、最初のレンダリングで作成されると今後の照合ステップで何度も更新される。
・仕事を非同期で実行できる：
  リコンシラーが行っているレンダリングプロセスをチャンクに分割し､
  いくつかのタスクを他のタスクより優先させ､ 作業を一時停止したり､ 再利用したり､ もう有効でなければ捨てたりすることができる｡

### Fiberが記録するもの
・現在のステート
・Props
・登録された副作用の実行
・使用されるフックリスト
・実行すべき作業のキュー
  ・ステートの更新､ 
  ・参照の更新
  ・登録された副作用の実行
  ・DOMの更新

### Reconciliationのプロセス
1. とあるStateが更新
2. 再レンダーし、仮想DOMが作成される
3. ファイバーはツリー全体を段階的にウォークスルーし、現在のファイバー・ツリーと、新しい仮想DOMに基づいて更新されたファイバー・ツリーの間で､ 何を変更する必要があるかを正確に分析する｡
4. DOMの差分をすべて、コミット・フェーズで実際にDOMを変異させるために使われるエフェクト・リストと呼ばれるリストに入れる｡